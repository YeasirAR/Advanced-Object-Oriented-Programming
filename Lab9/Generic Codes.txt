Code 1:
package Lab9;

public class GenericsTest<T> {
   T insVar1;
}

class Main{
   public static void main(String[] args) {
       GenericsTest<Integer> o1 = new GenericsTest<>();
       o1.insVar1 = 1000;

       GenericsTest<String> o2 = new GenericsTest<>();
       o2.insVar1 = "1000";

       GenericsTest<Double> o3 = new GenericsTest<>();
       o3.insVar1 = 5.0555550;
   }
}







Code 2:

package Lab9;

public class GenericsTest<T1 extends Number, T2 extends Number, T3 extends Number> {
   T1 insVar1;
   T2 insVar2;
   T3 insVar3;

   public GenericsTest(T1 insVar1, T2 insVar2, T3 insVar3) {
       this.insVar1 = insVar1;
       this.insVar2 = insVar2;
       this.insVar3 = insVar3;
   }

   double calcAvg(){
       double res = insVar1.doubleValue() + insVar2.doubleValue() + insVar3.doubleValue();
       return res / 3.0;
   }

}

class Main{
   public static void main(String[] args) {
       GenericsTest<Integer, Long, Double> test = new GenericsTest<>(100, 20000000000L, 5.5);
       System.out.println(test.calcAvg());
       System.out.println((100+20000000000L+5.5)/3.0);
   }
}





Code 3:

package Lab9;

class MyArrayList<T> {
   int count = 0;
   T[] array;

   MyArrayList(int maxSize){
       array = (T[]) new Object[maxSize];
   }

   T get(int index){
       if(index >= 0 && index < count) return array[index];
       return null;
   }

   void addLast(T obj)throws ArrayIndexOutOfBoundsException{
       if(count < array.length) {
           array[count] = obj;
           count++;
       }
       else throw new ArrayIndexOutOfBoundsException();
   }

   T removeLast(){
       if(count == 0) return null;
       else {
           T ret = array[count-1];
           count--;
           return  ret;
       }
   }
}

class Main{
   public static void main(String[] args) {
       MyArrayList<Double> list = new MyArrayList<>(10);

       list.addLast(10.55);
       list.addLast(12.55);

//        list.removeLast();

       System.out.println(list.get(0));
       System.out.println(list.get(1));
   }
}

